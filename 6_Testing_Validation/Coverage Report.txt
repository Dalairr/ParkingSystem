Coverage Report

Components / Coverage Notes
✅ Serial Communication	Covered
	Successfully parsed sensor inputs from Arduino via /dev/ttyUSB0.
✅ State Mapping Logic
	Covered	Accurately mapped sensor state to 'O' or 'X' for availability status.
✅ AWS IoT Core Publish
	Covered	MQTT messages published to configured topic and confirmed via log.
✅ DynamoDB Write
	Covered	Data written to ParkingStatus table and verified with timestamps.
✅ Lambda Query Function
	Covered	Lambda responded with latest item per spot, sorted by timestamp.
✅ API Gateway Access	
	Covered	HTML client fetched endpoint successfully with CORS enabled.
✅ Front-End Auto Refresh
	Covered	UI reflected real-time status on a 10s polling interval.
✅ Error Handling	
	Covered	Try-except block handled malformed serial input without crash.

Test Methods Used:

Manual spot simulation (Hall Effect Sensor)

Log inspection (serial console, AWS logs)

Frontend validation (visual + browser DevTools)

Lambda JSON response verification

Pass Criteria Met:

100% of major features tested

All critical paths (sensor → cloud → UI) verified

Latency within target (<300ms per MQTT-to-DynamoDB update)

Known Limitations (Observed During Testing):

The web page currently uses polling (every 5 seconds) to check for updates.

There is no authentication on the API.

